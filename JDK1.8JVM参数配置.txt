JAVA_OPTS="
-server        #服务器模式
-Xmx4g    #JVM最大允许分配的堆内存，按需分配
-Xms4g    #JVM初始分配的堆内存，一般和Xmx配置成一样以避免每次gc后JVM重新分配内存。
-Xmn256m    #年轻代内存大小，整个JVM内存=年轻代 + 年老代 + 持久代 
-Xss512k    #设置每个线程的堆栈大小
-XX:+DisableExplicitGC    #忽略手动调用GC, System.gc()的调用就会变成一个空调用，完全不触发GC
-XX:+UseConcMarkSweepGC     #并发标记清除（CMS）收集器
-XX:+CMSParallelRemarkEnabled    #降低标记停顿
-XX:LargePageSizeInBytes=128m    #内存页的大小
-XX:+UseFastAccessorMethods    #原始类型的快速优化
-XX:+UseCMSInitiatingOccupancyOnly        #使用手动定义初始化定义开始CMS收集
-XX:CMSInitiatingOccupancyFraction=70    #使用cms作为垃圾回收使用70％后开始CMS收集
-Ddruid.registerToSysProperty=true
"

JAVA_OPTS="
-server                              
-Xms4g                                 
-Xmx4g                                      
-Xmn2g                                         
-Xss1024k                                      
-XX:MetaspaceSize=256m                          
-XX:MaxMetaspaceSize=256M
-XX:SurvivorRatio=8
-XX:MaxTenuringThreshold=5
-XX:GCTimeRatio=19
-Xnoclassgc
-XX:+DisableExplicitGC
-XX:+UseParNewGC
-XX:+UseConcMarkSweepGC
-XX:+UseCMSCompactAtFullCollection
-XX:CMSFullGCsBeforeCompaction=0
-XX:-CMSParallelRemarkEnabled
-XX:CMSInitiatingOccupancyFraction=70
-XX:SoftRefLRUPolicyMSPerMB=0
-XX:+PrintClassHistogram
-XX:+PrintGCDetails
-XX:+PrintGCDateStamps
-XX:+PrintHeapAtGC
-Xloggc:log/gc.log
"

JAVA_OPTS="
-server 
-Xmx4000M
-Xms4000M
-Xmn600M
-XX:PermSize=500M
-XX:MaxPermSize=500M
-Xss1024K
-XX:+DisableExplicitGC
-XX:SurvivorRatio=8
-XX:+UseConcMarkSweepGC
-XX:+UseParNewGC
-XX:+CMSParallelRemarkEnabled
-XX:+UseCMSCompactAtFullCollection
-XX:CMSFullGCsBeforeCompaction=0
-XX:+CMSClassUnloadingEnabled
-XX:LargePageSizeInBytes=128M
-XX:+UseFastAccessorMethods
-XX:+UseCMSInitiatingOccupancyOnly
-XX:CMSInitiatingOccupancyFraction=80
-XX:SoftRefLRUPolicyMSPerMB=0
-XX:+PrintClassHistogram
-XX:+PrintGCDetails
-XX:+PrintGCTimeStamps
-XX:+PrintHeapAtGC
-Xloggc:log/gc.log
"
